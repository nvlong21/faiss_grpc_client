# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import faiss_grpc.faiss_pb2 as faiss__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class FaissServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Heatbeat = channel.unary_unary(
                '/faiss.FaissService/Heatbeat',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=faiss__pb2.SimpleResponse.FromString,
                )
        self.Search = channel.unary_unary(
                '/faiss.FaissService/Search',
                request_serializer=faiss__pb2.SearchRequest.SerializeToString,
                response_deserializer=faiss__pb2.SearchResponse.FromString,
                )
        self.SearchById = channel.unary_unary(
                '/faiss.FaissService/SearchById',
                request_serializer=faiss__pb2.SearchByIdRequest.SerializeToString,
                response_deserializer=faiss__pb2.SearchByIdResponse.FromString,
                )
        self.Insert = channel.unary_unary(
                '/faiss.FaissService/Insert',
                request_serializer=faiss__pb2.InsertRequest.SerializeToString,
                response_deserializer=faiss__pb2.InsertResponse.FromString,
                )
        self.Remove = channel.unary_unary(
                '/faiss.FaissService/Remove',
                request_serializer=faiss__pb2.RemoveRequest.SerializeToString,
                response_deserializer=faiss__pb2.RemoveResponse.FromString,
                )
        self.CreateCollection = channel.unary_unary(
                '/faiss.FaissService/CreateCollection',
                request_serializer=faiss__pb2.CreateRequest.SerializeToString,
                response_deserializer=faiss__pb2.SimpleResponse.FromString,
                )


class FaissServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Heatbeat(self, request, context):
        """Check server is working.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
        """Search neighbors from query vector.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchById(self, request, context):
        """Search neighbors from ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Insert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Remove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FaissServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Heatbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heatbeat,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=faiss__pb2.SimpleResponse.SerializeToString,
            ),
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=faiss__pb2.SearchRequest.FromString,
                    response_serializer=faiss__pb2.SearchResponse.SerializeToString,
            ),
            'SearchById': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchById,
                    request_deserializer=faiss__pb2.SearchByIdRequest.FromString,
                    response_serializer=faiss__pb2.SearchByIdResponse.SerializeToString,
            ),
            'Insert': grpc.unary_unary_rpc_method_handler(
                    servicer.Insert,
                    request_deserializer=faiss__pb2.InsertRequest.FromString,
                    response_serializer=faiss__pb2.InsertResponse.SerializeToString,
            ),
            'Remove': grpc.unary_unary_rpc_method_handler(
                    servicer.Remove,
                    request_deserializer=faiss__pb2.RemoveRequest.FromString,
                    response_serializer=faiss__pb2.RemoveResponse.SerializeToString,
            ),
            'CreateCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCollection,
                    request_deserializer=faiss__pb2.CreateRequest.FromString,
                    response_serializer=faiss__pb2.SimpleResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'faiss.FaissService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FaissService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Heatbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faiss.FaissService/Heatbeat',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            faiss__pb2.SimpleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faiss.FaissService/Search',
            faiss__pb2.SearchRequest.SerializeToString,
            faiss__pb2.SearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faiss.FaissService/SearchById',
            faiss__pb2.SearchByIdRequest.SerializeToString,
            faiss__pb2.SearchByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Insert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faiss.FaissService/Insert',
            faiss__pb2.InsertRequest.SerializeToString,
            faiss__pb2.InsertResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Remove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faiss.FaissService/Remove',
            faiss__pb2.RemoveRequest.SerializeToString,
            faiss__pb2.RemoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faiss.FaissService/CreateCollection',
            faiss__pb2.CreateRequest.SerializeToString,
            faiss__pb2.SimpleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
